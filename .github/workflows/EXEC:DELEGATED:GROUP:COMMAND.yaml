name: "EXECUTE:DELEGATED:GROUP:COMMAND"

on:
  workflow_dispatch:
    inputs:
      ACTION_INPUTS:
        default: "bank send zeta18f7wch6kpfdmk6dk9qqhkszpjwrymev4fpte8p zeta1yq5pqzvasc38mruv9xhs34rfx4lanlm709m7eg 10000azeta"
        description: "ACTION_INPUTS"
      FROM:
        description: 'FROM_ACCOUNT'
        type: choice
        required: true
        default: 'governance_mnemonic_account'
        options: [ 'governance_mnemonic_account']
      TENDERMINT_NODE:
        default: "https://rpc-archive.athens.zetachain.com:26657"
        description: "TENDERMINT_NODE"
      METADATA:
        default: "ipfs://QmYMEcLNY7yAfur8KtH2rcJTJutPNuGEJLaPrWEM6iAcpP"
        description: "METADATA"

jobs:
  delegated_command_execution:
    name: "EXECUTE:DELEGATED:GROUP:COMMAND"
    runs-on: ["ubuntu-latest"]
    env:
      BINARY_URL: "https://github.com/zeta-chain/node/releases/download/v8.3.3/zetacored-ubuntu-22-amd64"
      CHAIN_ID: "athens_7001-1"
      CONSTANT_PARAMS: "--broadcast-mode=block --gas=auto --gas-adjustment=2 --gas-prices=1.0azeta --keyring-backend test -y"
      GROUP_POLICY_ADDRESS: "zeta1dlszg2sst9r69my4f84l3mj66zxcf3umcgujys30t84srg95dgvs5wguxq"
      VOTING_ACCOUNT: "zeta1utsn7w4dzluh026ylwkntmtc4jrpn2393nsggp"
      TX_TYPE: "tx"
      VOTE_YES_OR_NO: "VOTE_OPTION_YES"
    steps:
      - uses: actions/checkout@v3

      - name: "DOWNLOAD:BINARY:SET:PATH"
        shell: bash
        run: |
          wget -q ${BINARY_URL}
          mv zetacored-ubuntu-22-amd64 zetacored
          echo "PATH=$(pwd):$PATH" >> ${GITHUB_ENV}
          chmod 777 zetacored

      - name: "LOAD:MNEMONIC"
        shell: bash
        run: |
          echo "${{ secrets.GOV_MNEMONIC }}" | zetacored keys add ${{ github.event.inputs.FROM }} --keyring-backend test --recover --hd-path="m/44'/118'/0'/0/0"

      - name: "EXECUTE:PASSED:COMMAND 1"
        shell: bash
        run: |   
          OPERATOR_ADDRESS_LIST=("zeta1mte0r3jzkf2rkd7ex4p3xsd3fxqg7q29q0wxl5" "zeta18pksjzclks34qkqyaahf2rakss80mnusju77cm" "zeta18f7wch6kpfdmk6dk9qqhkszpjwrymev4fpte8p")
          PROPOSAL_FILENAME=action.json
          
          cp .github/workflows/templates/group_proposal.template.json $PROPOSAL_FILENAME
          
          for OPERATOR_ADDRESS in "${OPERATOR_ADDRESS_LIST[@]}"
          do
            echo "Generate Action for Operator Address: ${OPERATOR_ADDRESS}"
            echo 'zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} --from "${OPERATOR_ADDRESS}" ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} --generate-only > tmp.json'
            zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} \
              --from "${OPERATOR_ADDRESS}" \
              ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} \
              --chain-id ${{ env.CHAIN_ID }} \
              --generate-only > tmp.json
          
            echo "Generate Authz Exec Action for Above Action input"
            echo 'zetacored tx authz exec tmp.json --from "${{ env.GROUP_POLICY_ADDRESS }}" --node=${{ github.event.inputs.TENDERMINT_NODE }} --keyring-backend test --generate-only --chain-id ${{ env.CHAIN_ID }} > action-"$OPERATOR_ADDRESS".json'
            zetacored tx authz exec tmp.json \
              --from "${{ env.GROUP_POLICY_ADDRESS }}" \
              --keyring-backend test \
              --generate-only \
              --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} > action-"$OPERATOR_ADDRESS".json
          
            echo "Remove tmp JSON"
            rm -rf tmp.json
          
            echo "Use JQ to to edit json template"
            jq --argjson msg1 "$(jq '.body.messages[0]' action-"$OPERATOR_ADDRESS".json)" '.messages += [$msg1]' $PROPOSAL_FILENAME > tmp.json && mv tmp.json $PROPOSAL_FILENAME
          
          done
          
          echo "get tx hash for proposal submission"
          echo 'zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r'
          TX_HASH=$(zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r)
          
          sleep 20
          
          echo "Get group proposal ID"
          export GROUP_PROPOSAL_ID=$(zetacored query tx $TX_HASH --output json --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} | jq '.events' | jq -r '.[] | select(.type == "cosmos.group.v1.EventSubmitProposal") | .attributes[0].value' | base64 --decode | jq -r '.')
          echo "***********"
          echo "GROUP_PROPOSAL_ID=${GROUP_PROPOSAL_ID}"
          echo "***********"
          
          echo "Zetacored tx group vode on the proposal"
          zetacored tx group vote ${GROUP_PROPOSAL_ID} ${{ env.VOTING_ACCOUNT }} ${{ env.VOTE_YES_OR_NO }} ${{ github.event.inputs.METADATA }} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }} \
            --exec 1
          
          sleep 20
          
          echo "Execute group exec vote"
          zetacored tx group exec ${GROUP_PROPOSAL_ID} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }}

      - name: "Sleep for 20 seconds"
        shell: bash
        run: |
            sleep 20

      - name: "EXECUTE:PASSED:COMMAND 2"
        shell: bash
        run: |   
          OPERATOR_ADDRESS_LIST=("zeta1w8qa37h22h884vxedmprvwtd3z2nwakxu9k935" "zeta1j8g8ch4uqgl3gtet3nntvczaeppmlxajqwh5u6" "zeta1dxyzsket66vt886ap0gnzlnu5pv0y99v086wnz")
          PROPOSAL_FILENAME=action.json
          
          cp .github/workflows/templates/group_proposal.template.json $PROPOSAL_FILENAME
          
          for OPERATOR_ADDRESS in "${OPERATOR_ADDRESS_LIST[@]}"
          do
            echo "Generate Action for Operator Address: ${OPERATOR_ADDRESS}"
            echo 'zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} --from "${OPERATOR_ADDRESS}" ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} --generate-only > tmp.json'
            zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} \
              --from "${OPERATOR_ADDRESS}" \
              ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} \
              --chain-id ${{ env.CHAIN_ID }} \
              --generate-only > tmp.json
          
            echo "Generate Authz Exec Action for Above Action input"
            echo 'zetacored tx authz exec tmp.json --from "${{ env.GROUP_POLICY_ADDRESS }}" --node=${{ github.event.inputs.TENDERMINT_NODE }} --keyring-backend test --generate-only --chain-id ${{ env.CHAIN_ID }} > action-"$OPERATOR_ADDRESS".json'
            zetacored tx authz exec tmp.json \
              --from "${{ env.GROUP_POLICY_ADDRESS }}" \
              --keyring-backend test \
              --generate-only \
              --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} > action-"$OPERATOR_ADDRESS".json
          
            echo "Remove tmp JSON"
            rm -rf tmp.json
          
            echo "Use JQ to to edit json template"
            jq --argjson msg1 "$(jq '.body.messages[0]' action-"$OPERATOR_ADDRESS".json)" '.messages += [$msg1]' $PROPOSAL_FILENAME > tmp.json && mv tmp.json $PROPOSAL_FILENAME
          
          done
          
          echo "get tx hash for proposal submission"
          echo 'zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r'
          TX_HASH=$(zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r)
          
          sleep 20
          
          echo "Get group proposal ID"
          export GROUP_PROPOSAL_ID=$(zetacored query tx $TX_HASH --output json --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} | jq '.events' | jq -r '.[] | select(.type == "cosmos.group.v1.EventSubmitProposal") | .attributes[0].value' | base64 --decode | jq -r '.')
          echo "***********"
          echo "GROUP_PROPOSAL_ID=${GROUP_PROPOSAL_ID}"
          echo "***********"
          
          echo "Zetacored tx group vode on the proposal"
          zetacored tx group vote ${GROUP_PROPOSAL_ID} ${{ env.VOTING_ACCOUNT }} ${{ env.VOTE_YES_OR_NO }} ${{ github.event.inputs.METADATA }} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }} \
            --exec 1
          
          sleep 20
          
          echo "Execute group exec vote"
          zetacored tx group exec ${GROUP_PROPOSAL_ID} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }}

      - name: "Sleep for 20 seconds"
        shell: bash
        run: |
            sleep 20

      - name: "EXECUTE:PASSED:COMMAND 3"
        shell: bash
        run: |   
          OPERATOR_ADDRESS_LIST=("zeta1w5czgpk5kc9etxw2anzhr0uyrr4fqks32qmk6k" "zeta1ymnrwg9e3xr9xkw42ygzjx34dyvwvtc23cnnxz" "zeta15ruj2tc76pnj9xtw64utktee7cc7w6vzaes73z")
          PROPOSAL_FILENAME=action.json
          
          cp .github/workflows/templates/group_proposal.template.json $PROPOSAL_FILENAME
          
          for OPERATOR_ADDRESS in "${OPERATOR_ADDRESS_LIST[@]}"
          do
            echo "Generate Action for Operator Address: ${OPERATOR_ADDRESS}"
            echo 'zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} --from "${OPERATOR_ADDRESS}" ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} --generate-only > tmp.json'
            zetacored ${{ env.TX_TYPE }} ${{ github.event.inputs.ACTION_INPUTS }} \
              --from "${OPERATOR_ADDRESS}" \
              ${{ env.CONSTANT_PARAMS }} --node=${{ github.event.inputs.TENDERMINT_NODE }} \
              --chain-id ${{ env.CHAIN_ID }} \
              --generate-only > tmp.json
          
            echo "Generate Authz Exec Action for Above Action input"
            echo 'zetacored tx authz exec tmp.json --from "${{ env.GROUP_POLICY_ADDRESS }}" --node=${{ github.event.inputs.TENDERMINT_NODE }} --keyring-backend test --generate-only --chain-id ${{ env.CHAIN_ID }} > action-"$OPERATOR_ADDRESS".json'
            zetacored tx authz exec tmp.json \
              --from "${{ env.GROUP_POLICY_ADDRESS }}" \
              --keyring-backend test \
              --generate-only \
              --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} > action-"$OPERATOR_ADDRESS".json
          
            echo "Remove tmp JSON"
            rm -rf tmp.json
          
            echo "Use JQ to to edit json template"
            jq --argjson msg1 "$(jq '.body.messages[0]' action-"$OPERATOR_ADDRESS".json)" '.messages += [$msg1]' $PROPOSAL_FILENAME > tmp.json && mv tmp.json $PROPOSAL_FILENAME
          
          done
          
          echo "get tx hash for proposal submission"
          echo 'zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r'
          TX_HASH=$(zetacored tx group submit-proposal $PROPOSAL_FILENAME --exec 1 --from ${{ github.event.inputs.FROM }} ${{ env.CONSTANT_PARAMS }} --chain-id ${{ env.CHAIN_ID }} --node=${{ github.event.inputs.TENDERMINT_NODE }} -o json | jq .txhash -r)
          
          sleep 20
          
          echo "Get group proposal ID"
          export GROUP_PROPOSAL_ID=$(zetacored query tx $TX_HASH --output json --node=${{ github.event.inputs.TENDERMINT_NODE }} --chain-id ${{ env.CHAIN_ID }} | jq '.events' | jq -r '.[] | select(.type == "cosmos.group.v1.EventSubmitProposal") | .attributes[0].value' | base64 --decode | jq -r '.')
          echo "***********"
          echo "GROUP_PROPOSAL_ID=${GROUP_PROPOSAL_ID}"
          echo "***********"
          
          echo "Zetacored tx group vode on the proposal"
          zetacored tx group vote ${GROUP_PROPOSAL_ID} ${{ env.VOTING_ACCOUNT }} ${{ env.VOTE_YES_OR_NO }} ${{ github.event.inputs.METADATA }} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }} \
            --exec 1
          
          sleep 20
          
          echo "Execute group exec vote"
          zetacored tx group exec ${GROUP_PROPOSAL_ID} \
            --from ${{ github.event.inputs.FROM }} \
            ${{ env.CONSTANT_PARAMS }} \
            --chain-id ${{ env.CHAIN_ID }} \
            --node=${{ github.event.inputs.TENDERMINT_NODE }}